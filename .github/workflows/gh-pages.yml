# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Github Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  latex:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - uses: xu-cheng/texlive-action/full@v1
      with:
        run: make pdf

    - name: Store Build Content
      uses: actions/upload-artifact@v3
      with:
        name: compiled-pdf
        path: ./output

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Set pelican config for a brunch
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
              echo "TARGET=html-release" >> "$GITHUB_ENV"
          else
              echo "TARGET=html" >> "$GITHUB_ENV"
          fi
      - uses: actions/checkout@v2
        with:
          submodules: true
          lfs: true
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install Dependencies
        run: |
          make apt pypi
      - name: Build Pages
        run: |
          make $TARGET
      - name: Store Build Content
        uses: actions/upload-artifact@v3
        with:
          name: website-content
          path: ./output

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    # Publish preview of the PR or the release if on master
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: [website-content, compiled-pdf]
      - name: Deploy Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .

  preview:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: [website-content, compiled-pdf]
      - name: Deploy site preview to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: .
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: false
          overwrites-pull-request-comment: true
          alias: deploy-preview-${{ github.event.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
